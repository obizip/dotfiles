[ -z "$PS1" ] && return # if not interactive, then do nothing

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"

export EDITOR=vim
export PATH="$HOME/.local/bin:$PATH"

export FZF_DEFAULT_OPTS="--walker-skip .git,node_modules,target,vendor"

export LSCOLORS="ExFxCxDxBxegedabagac" # 全体的に明るい色に

shopt -s extglob

# Completion
bash_completion_paths=(
    "/etc/bash_completion" # debian
    "/etc/bash/bash_completion" # alpine
)
for bash_completion_path in "${bash_completion_paths[@]}"; do
	if [[ -e $bash_completion_path ]]; then
		. $bash_completion_path
	fi
done

#
# Prompt
# 
GRAY="\[\e[2;33m\]"
RED="\[\e[0;31m\]"
GREEN="\[\e[0;32m\]"
BLUE="\[\e[0;34m\]"
CYAN="\[\e[0;36m\]"
RESET="\[\e[0m\]"

export PS1="${GREEN}\u${RESET}@${GREEN}\h${RESET}:${CYAN}\w${RESET}\n\$ "

# Git Prompt
git_prompt_paths=(
    "/Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh"
    "/etc/bash_completion.d/git-prompt" # debian 
    "/usr/share/git-core/git-prompt.sh" # alpine
)
for git_prompt_path in "${git_prompt_paths[@]}"; do
	if [[ -e $git_prompt_path ]]; then
		. $git_prompt_path

		GIT_PS1_SHOWDIRTYSTATE=true
		GIT_PS1_SHOWUNTRACKEDFILES=true
		GIT_PS1_SHOWSTASHSTATE=true
		GIT_PS1_SHOWUPSTREAM=auto

		first_line="${GREEN}\u${RESET}@${GREEN}\h${RESET}:${CYAN}\w${RESET}"
		second_line="${RED}\$(__git_ps1 '(%s)')${RESET}\$${GRAY}\$([ \j -gt 0 ] && echo '*')${RESET} "
		export PS1="${first_line}\n${second_line}"
	fi
done

#
# Aliases
#
alias ..="cd .."
alias ....="cd ../.."
alias so=". ${HOME}/.bashrc"
alias d="docker"
alias dc="docker compose"
alias g="git"
alias j="jobs"
alias t="tig status"
alias lg="lazygit"
alias ls="ls --color=auto"
alias l="ls -al --color=auto"
alias ll="ls -l --color=auto"
alias la="ls -a --color=auto"
alias lla="ls -al --color=auto"
alias sl="ls --color=auto"
alias v="nvim"
alias tree="tree -I '.venv|.git|node_modules|__pycache__|target|vendor'"
alias devsh="docker compose exec -it dev bash"

if [[ "$(hostname)" == "macbook.local" ]]; then
    if [ -f "${XDG_CONFIG_HOME}/bash/mac.sh" ]; then
        source "${XDG_CONFIG_HOME}/bash/mac.sh"
    fi
fi

eval "$(fzf --bash)"

export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export PAGER=bat

# alias l="eza -al"
# alias ls="eza"
# alias ll="eza -l"
# alias la="eza -a"
# alias lla="eza -al"
# alias lt="eza -l --reverse --sort=modified"

# yazi
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

if [[ -e "$HOME/.cargo/env" ]]; then
	. "$HOME/.cargo/env"
fi

if [[ -e "/usr/local/cargo/bin" ]]; then
	export PATH="/usr/local/cargo/bin:$PATH"
fi

if [[ -e "$HOME/.opam" ]]; then
	eval $(opam env)
fi
